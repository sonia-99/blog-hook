{"version":3,"sources":["contexts.js","utils.js","WebAPI.js","components/Navbar/Navbar.js","pages/HomePage/HomePage.js","pages/LoginPage/LoginPage.js","pages/PostPage/PostPage.js","pages/NewPostPage/NewPostPage.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","getMe","fetch","headers","authorization","then","res","json","NavbarContainer","styled","div","LeftContainer","Brand","NavbarList","Nav","Link","props","$active","Navbar","location","useLocation","useContext","user","setUser","isGettingUser","history","useHistory","to","pathname","onClick","push","Root","PostContainer","PostTitle","PostRight","PostTime","Post","post","id","title","Date","createdAt","toLocaleString","method","deletePost","alert","HomePage","useState","posts","setPosts","useEffect","response","map","ErrorMessage","LoginPage","username","setUsername","password","setPassword","errMsg","setErrMsg","onSubmit","e","preventDefault","body","JSON","stringify","login","data","ok","message","type","value","onChange","target","PostItem","h2","PostContent","PostPage","useParams","setPost","getPost","setTitle","content","setContent","newPost","rows","App","setIsGettingUser","Provider","exact","path","NewPostPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.067901d9.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const AuthContext = createContext();\n","const TOKEN_NAME = 'token';\n\nexport const setAuthToken = (token) => {\n\tlocalStorage.setItem(TOKEN_NAME, token);\n};\n\nexport const getAuthToken = () => {\n\treturn localStorage.getItem(TOKEN_NAME);\n};\n","import { getAuthToken } from './utils';\n\nconst BASE_URL = 'https://student-json-api.lidemy.me';\n\nexport const getPosts = () => {\n\treturn fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then((response) => response.json());\n};\nexport const getPost = (id) => {\n\treturn fetch(`${BASE_URL}/posts/${id}`).then((response) => response.json());\n};\nexport const login = (username, password) => {\n\treturn fetch(`${BASE_URL}/login`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'content-type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\tusername: username,\n\t\t\tpassword: password\n\t\t})\n\t}).then((res) => res.json());\n};\nexport const getMe = () => {\n\tconst token = getAuthToken();\n\treturn fetch(`${BASE_URL}/me`, {\n\t\theaders: {\n\t\t\tauthorization: `Bearer ${token}`\n\t\t}\n\t}).then((res) => res.json());\n};\nexport const newPost = (title, body) => {\n\tconst token = getAuthToken();\n\treturn fetch(`${BASE_URL}/posts`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'content-type': 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\ttitle,\n\t\t\tbody\n\t\t})\n\t}).then((res) => res.json());\n};\nexport const deletePost = (id) => {\n\tconst token = getAuthToken();\n\treturn fetch(`${BASE_URL}/posts/${id}`, {\n\t\tmethod: 'DELETE',\n\t\theaders: {\n\t\t\t// 'content-type': 'application/json',\n\t\t\tauthorization: `Bearer ${token}`\n\t\t}\n\t}).then((res) => res.json());\n};\n","import { useContext } from 'react';\nimport styled from 'styled-components';\nimport { Link, useLocation, useHistory } from 'react-router-dom';\nimport { AuthContext } from '../../contexts';\nimport { setAuthToken } from '../../utils';\n\nconst NavbarContainer = styled.div`\n\tbox-sizing: border-box;\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\tright: 0;\n\tborder: 1px solid grey;\n\theight: 64px;\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tfont-weight: bold;\n\tbackground: white;\n`;\nconst LeftContainer = styled.div`\n\theight: 100%;\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n`;\nconst Brand = styled.div`\n\tfont-size: 1.4rem;\n\theight: 100%;\n\tdisplay: flex;\n\talign-items: center;\n\tpadding: 0 0.5rem;\n`;\nconst NavbarList = styled.div`\n\theight: 100%;\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tmargin-left: 4rem;\n`;\nconst Nav = styled(Link)`\n\theight: 100%;\n\tdisplay: flex;\n\talign-items: center;\n\tpadding: 0 1rem;\n\tcolor: black;\n\ttext-decoration: none;\n\t${(props) => props.$active && `background:rgba(0,0,0,0.1)`}\n`;\n\nfunction Navbar() {\n\tconst location = useLocation();\n\tconst { user, setUser, isGettingUser } = useContext(AuthContext);\n\tconst history = useHistory();\n\tconst handleLogoutClick = () => {\n\t\tsetAuthToken('');\n\t\tsetUser(null);\n\t\tif (location.pathname !== '/') {\n\t\t\thistory.push('/');\n\t\t}\n\t};\n\treturn (\n\t\t<NavbarContainer>\n\t\t\t<LeftContainer>\n\t\t\t\t<Brand>A SIMPLE BLOG</Brand>\n\t\t\t\t<NavbarList>\n\t\t\t\t\t<Nav to=\"/\" $active={location.pathname === '/'}>\n\t\t\t\t\t\tHOME\n\t\t\t\t\t</Nav>\n\t\t\t\t\t{user && (\n\t\t\t\t\t\t<Nav to=\"/new-post\" $active={location.pathname === '/new-post'}>\n\t\t\t\t\t\t\t+POST\n\t\t\t\t\t\t</Nav>\n\t\t\t\t\t)}\n\t\t\t\t</NavbarList>\n\t\t\t</LeftContainer>\n\t\t\t<NavbarList>\n\t\t\t\t{isGettingUser || user ? (\n\t\t\t\t\t<Nav onClick={handleLogoutClick}>LOGOUT</Nav>\n\t\t\t\t) : (\n\t\t\t\t\t<Nav to=\"/login\" $active={location.pathname === '/login'}>\n\t\t\t\t\t\tLOGIN\n\t\t\t\t\t</Nav>\n\t\t\t\t)}\n\t\t\t</NavbarList>\n\t\t</NavbarContainer>\n\t);\n}\n\nexport default Navbar;\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { getPosts, deletePost } from '../../WebAPI';\n\nconst Root = styled.div`\n\twidth: 80%;\n\tmargin: 0 auto;\n`;\nconst PostContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: flex-end;\n\tpadding: 1rem;\n\tborder-bottom: 1px solid rgba(0, 0, 0, 0.3);\n`;\nconst PostTitle = styled(Link)`font-size: 1.2rem;color:#333;text-decoration:none;`;\nconst PostRight = styled.div`display: flex;`;\nconst PostTime = styled.div`color: rgba(0, 0, 0, 0.8);`;\n\nfunction Post({ post }) {\n\tconst handleDelete = () => {\n\t\tdeletePost(post.id).then((res) => {\n\t\t\talert(`Deleting the post: ${post.title}.`);\n\t\t});\n\t};\n\treturn (\n\t\t<Root>\n\t\t\t<PostContainer>\n\t\t\t\t<PostTitle to={`/posts/${post.id}`}>{post.title}</PostTitle>\n\t\t\t\t<PostRight>\n\t\t\t\t\t<PostTime>{new Date(post.createdAt).toLocaleString()}</PostTime>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button onClick={handleDelete}>Delete</button>\n\t\t\t\t\t</div>\n\t\t\t\t</PostRight>\n\t\t\t</PostContainer>\n\t\t</Root>\n\t);\n}\nPost.propTypes = {\n\tpost: PropTypes.object\n};\nfunction HomePage() {\n\tconst [ posts, setPosts ] = useState(null);\n\tuseEffect(\n\t\t() => {\n\t\t\tgetPosts().then((posts) => setPosts(posts));\n\t\t},\n\t\t[ posts ]\n\t);\n\treturn <Root>{posts && posts.map((post) => <Post key={post.id} post={post} />)}</Root>;\n}\n\nexport default HomePage;\n","import { useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { login, getMe } from '../../WebAPI';\nimport { setAuthToken } from '../../utils';\nimport { AuthContext } from '../../contexts';\n\nconst Root = styled.div``;\nconst ErrorMessage = styled.div`color: red;`;\nfunction LoginPage() {\n\tconst [ username, setUsername ] = useState('');\n\tconst [ password, setPassword ] = useState('');\n\tconst [ errMsg, setErrMsg ] = useState('');\n\tlet history = useHistory();\n\tconst { setUser } = useContext(AuthContext);\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tsetErrMsg('');\n\t\tif (username && password) {\n\t\t\tlogin(username, password).then((data) => {\n\t\t\t\tif (data.ok === 0) {\n\t\t\t\t\treturn setErrMsg(data.message);\n\t\t\t\t}\n\t\t\t\tif (data.ok === 1) {\n\t\t\t\t\t// Save token to localStorage\n\t\t\t\t\tsetAuthToken(data.token);\n\t\t\t\t\t// Authenticate and get user info, then keep it in state\n\t\t\t\t\tgetMe().then((res) => {\n\t\t\t\t\t\tif (res.ok === 1) {\n\t\t\t\t\t\t\tsetUser(res.data);\n\t\t\t\t\t\t\talert('Logged in successfully.');\n\t\t\t\t\t\t\thistory.push('/');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsetUser(null);\n\t\t\t\t\t\t\tsetAuthToken(null);\n\t\t\t\t\t\t\tsetErrMsg('Failed to login....');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\treturn (\n\t\t<Root>\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<div>\n\t\t\t\t\tUsername:{' '}\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\tsetUsername(e.target.value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\tPassword:{' '}\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\tsetPassword(e.target.value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t{errMsg && <ErrorMessage>*{errMsg}</ErrorMessage>}\n\t\t\t\t<button>Login</button>\n\t\t\t</form>\n\t\t</Root>\n\t);\n}\n\nexport default LoginPage;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { getPost } from '../../WebAPI';\nconst Root = styled.div`\n\twidth: 80%;\n\tmargin: 0 auto;\n`;\nconst PostItem = styled.div``;\nconst PostTitle = styled.h2``;\nconst PostTime = styled.div`color: rgba(0, 0, 0, 0.6);`;\nconst PostContent = styled.div`\n\twhite-space: pre-line;\n\tmargin-bottom: 70px;\n`;\nfunction PostPage() {\n\tlet { id } = useParams();\n\tconst [ post, setPost ] = useState(null);\n\tuseEffect(() => {\n\t\tgetPost(id).then((data) => setPost(data));\n\t\t// eslint-disable-next-line\n\t}, []);\n\treturn (\n\t\t<Root>\n\t\t\t{post && (\n\t\t\t\t<PostItem>\n\t\t\t\t\t<PostTitle>{post.title}</PostTitle>\n\t\t\t\t\t<PostTime>{new Date(post.createdAt).toLocaleString()}</PostTime>\n\t\t\t\t\t<PostContent>{post.body}</PostContent>\n\t\t\t\t</PostItem>\n\t\t\t)}\n\t\t</Root>\n\t);\n}\n\nexport default PostPage;\n","import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { newPost } from '../../WebAPI';\nimport styled from 'styled-components';\nconst Root = styled.div`\n\twidth: 80%;\n\tmargin: 0 auto;\n`;\n\nfunction PostPage() {\n\tconst [ title, setTitle ] = useState('');\n\tconst [ content, setContent ] = useState('');\n\tconst history = useHistory();\n\tconst handlePostSubmit = (e) => {\n\t\te.preventDefault();\n\t\tif (title && content) {\n\t\t\tnewPost(title, content).then((res) => {\n\t\t\t\tif (res.ok === 0) {\n\t\t\t\t\treturn alert(res.message);\n\t\t\t\t}\n\t\t\t\talert(`Post submitted.`);\n\t\t\t\tsetTitle('');\n\t\t\t\tsetContent('');\n\t\t\t\thistory.push('/');\n\t\t\t});\n\t\t}\n\t};\n\treturn (\n\t\t<Root>\n\t\t\t<form onSubmit={handlePostSubmit}>\n\t\t\t\t<div>\n\t\t\t\t\tTitle: <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\tContent: <textarea rows=\"20\" value={content} onChange={(e) => setContent(e.target.value)} />\n\t\t\t\t</div>\n\t\t\t\t<button>Submit</button>\n\t\t\t</form>\n\t\t</Root>\n\t);\n}\n\nexport default PostPage;\n","import { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport { AuthContext } from '../../contexts';\nimport { getAuthToken } from '../../utils';\nimport { getMe } from '../../WebAPI';\n\nimport Navbar from '../Navbar';\nimport HomePage from '../../pages/HomePage';\nimport LoginPage from '../../pages/LoginPage';\nimport PostPage from '../../pages/PostPage';\nimport NewPostPage from '../../pages/NewPostPage';\n\nconst Root = styled.div`padding-top: 64px;`;\n\nfunction App() {\n\tconst [ user, setUser ] = useState(null);\n\tconst [ isGettingUser, setIsGettingUser ] = useState(() => {\n\t\tif (getAuthToken()) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t});\n\tuseEffect(() => {\n\t\tconst token = getAuthToken();\n\t\tif (token) {\n\t\t\tgetMe().then((res) => {\n\t\t\t\tif (res.ok) {\n\t\t\t\t\tsetUser(res.data);\n\t\t\t\t\tsetIsGettingUser(false);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}, []);\n\treturn (\n\t\t<AuthContext.Provider value={{ user, setUser, isGettingUser }}>\n\t\t\t<Root>\n\t\t\t\t<Router>\n\t\t\t\t\t<Navbar />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t\t<HomePage />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/login\">\n\t\t\t\t\t\t\t<LoginPage />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/posts/:id\">\n\t\t\t\t\t\t\t<PostPage />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/new-post\">\n\t\t\t\t\t\t\t<NewPostPage />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</Router>\n\t\t\t</Root>\n\t\t</AuthContext.Provider>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}